# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: imgproc.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rimgproc.proto\x12\x05order\"H\n\x0eImgProcRequest\x12\x0b\n\x03\x63md\x18\x01 \x02(\t\x12\x0e\n\x06reqobj\x18\x02 \x01(\t\x12\x0b\n\x03img\x18\x03 \x01(\x0c\x12\x0c\n\x04img2\x18\x04 \x01(\x0c\"I\n\x0cImgProcReply\x12\x0e\n\x06result\x18\x01 \x02(\t\x12\x0e\n\x06resobj\x18\x02 \x01(\t\x12\x0b\n\x03img\x18\x03 \x01(\x0c\x12\x0c\n\x04img2\x18\x04 \x01(\x0c\x32=\n\x07ImgProc\x12\x32\n\x02\x64o\x12\x15.order.ImgProcRequest\x1a\x13.order.ImgProcReply\"\x00')



_IMGPROCREQUEST = DESCRIPTOR.message_types_by_name['ImgProcRequest']
_IMGPROCREPLY = DESCRIPTOR.message_types_by_name['ImgProcReply']
ImgProcRequest = _reflection.GeneratedProtocolMessageType('ImgProcRequest', (_message.Message,), {
  'DESCRIPTOR' : _IMGPROCREQUEST,
  '__module__' : 'imgproc_pb2'
  # @@protoc_insertion_point(class_scope:order.ImgProcRequest)
  })
_sym_db.RegisterMessage(ImgProcRequest)

ImgProcReply = _reflection.GeneratedProtocolMessageType('ImgProcReply', (_message.Message,), {
  'DESCRIPTOR' : _IMGPROCREPLY,
  '__module__' : 'imgproc_pb2'
  # @@protoc_insertion_point(class_scope:order.ImgProcReply)
  })
_sym_db.RegisterMessage(ImgProcReply)

_IMGPROC = DESCRIPTOR.services_by_name['ImgProc']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _IMGPROCREQUEST._serialized_start=24
  _IMGPROCREQUEST._serialized_end=96
  _IMGPROCREPLY._serialized_start=98
  _IMGPROCREPLY._serialized_end=171
  _IMGPROC._serialized_start=173
  _IMGPROC._serialized_end=234
# @@protoc_insertion_point(module_scope)
